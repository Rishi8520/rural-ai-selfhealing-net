tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  title: "Healing Interface Type Definitions"
  description: "TOSCA interface type definitions for AI-driven healing operations and orchestration"
  author: "Nokia Build-a-thon AI Self-Healing Network"
  version: "1.0.0"
  created: "2024-12-08"
  template_type: "interface_type_definitions"
  domain: "healing_operations"
  ai_enhanced: true

# Interface Type Definitions for Healing Operations
interface_types:
  
  # Standard Healing Interface
  rural_network.StandardHealingInterface:
    derived_from: tosca.interfaces.Root
    description: "Standard interface for basic healing operations"
    operations:
      create:
        description: "Initialize healing service"
        inputs:
          healing_context:
            type: map
            entry_schema:
              type: string
            description: "Context information for healing initialization"
            required: false
          priority_level:
            type: integer
            constraints:
              - in_range: [1, 5]
            default: 3
          timeout:
            type: integer
            description: "Operation timeout in seconds"
            default: 60
      configure:
        description: "Configure healing parameters"
        inputs:
          configuration_data:
            type: map
            entry_schema:
              type: string
            description: "Configuration parameters"
            required: true
          validation_required:
            type: boolean
            default: true
          backup_configuration:
            type: boolean
            description: "Whether to backup current configuration"
            default: true
      start:
        description: "Start healing operation"
        inputs:
          execution_mode:
            type: string
            constraints:
              - valid_values: ["immediate", "scheduled", "conditional"]
            default: "immediate"
          monitoring_enabled:
            type: boolean
            default: true
          rollback_on_failure:
            type: boolean
            default: true
      stop:
        description: "Stop healing operation"
        inputs:
          graceful_stop:
            type: boolean
            default: true
          preserve_state:
            type: boolean
            default: true
      delete:
        description: "Clean up healing resources"
        inputs:
          cleanup_mode:
            type: string
            constraints:
              - valid_values: ["complete", "preserve_logs", "preserve_configuration"]
            default: "preserve_logs"
          generate_report:
            type: boolean
            default: true

  # Advanced Healing Interface
  rural_network.AdvancedHealingInterface:
    derived_from: rural_network.StandardHealingInterface
    description: "Advanced interface with AI-enhanced healing capabilities"
    operations:
      analyze:
        description: "Analyze current state and determine healing strategy"
        inputs:
          analysis_depth:
            type: string
            constraints:
              - valid_values: ["basic", "comprehensive", "deep_learning"]
            default: "comprehensive"
          historical_data_required:
            type: boolean
            default: true
          ai_model_selection:
            type: string
            constraints:
              - valid_values: ["lstm", "random_forest", "neural_network", "ensemble"]
            default: "ensemble"
          confidence_threshold:
            type: float
            constraints:
              - in_range: [0.0, 1.0]
            default: 0.8
      predict:
        description: "Predict healing outcomes and effectiveness"
        inputs:
          prediction_horizon:
            type: integer
            description: "Prediction time horizon in minutes"
            default: 60
          scenario_modeling:
            type: boolean
            default: true
          uncertainty_quantification:
            type: boolean
            default: true
      optimize:
        description: "Optimize healing strategy based on current conditions"
        inputs:
          optimization_objectives:
            type: list
            entry_schema:
              type: string
            description: "List of optimization objectives"
            required: true
          constraint_satisfaction:
            type: boolean
            default: true
          multi_objective_optimization:
            type: boolean
            default: true
      validate_healing:
        description: "Validate healing effectiveness"
        inputs:
          validation_tests:
            type: list
            entry_schema:
              type: string
            description: "List of validation tests to perform"
            required: true
          validation_timeout:
            type: integer
            default: 120
          performance_benchmarking:
            type: boolean
            default: true
      adapt:
        description: "Adapt healing strategy based on feedback"
        inputs:
          feedback_data:
            type: map
            entry_schema:
              type: string
            description: "Feedback data for adaptation"
            required: true
          learning_rate:
            type: float
            constraints:
              - in_range: [0.01, 1.0]
            default: 0.1
          adaptation_scope:
            type: string
            constraints:
              - valid_values: ["local", "global", "contextual"]
            default: "contextual"

  # Emergency Response Interface
  rural_network.EmergencyResponseInterface:
    derived_from: rural_network.StandardHealingInterface
    description: "Specialized interface for emergency response operations"
    operations:
      emergency_assess:
        description: "Rapid emergency situation assessment"
        inputs:
          assessment_mode:
            type: string
            constraints:
              - valid_values: ["rapid", "comprehensive", "triage"]
            default: "rapid"
          emergency_type:
            type: string
            required: true
          affected_infrastructure:
            type: list
            entry_schema:
              type: string
            required: true
          time_criticality:
            type: integer
            description: "Emergency time criticality (1=most critical)"
            constraints:
              - in_range: [1, 5]
            default: 1
      emergency_isolate:
        description: "Emergency isolation of affected components"
        inputs:
          isolation_scope:
            type: string
            constraints:
              - valid_values: ["component", "subsystem", "network_segment"]
            required: true
          preservation_mode:
            type: string
            constraints:
              - valid_values: ["data_preservation", "service_continuity", "safety_first"]
            default: "safety_first"
          cascading_prevention:
            type: boolean
            default: true
      emergency_restore:
        description: "Emergency restoration of critical services"
        inputs:
          restoration_priority:
            type: list
            entry_schema:
              type: string
            description: "Ordered list of restoration priorities"
            required: true
          minimum_service_level:
            type: float
            constraints:
              - in_range: [0.1, 1.0]
            description: "Minimum acceptable service level"
            default: 0.6
          temporary_solutions:
            type: boolean
            description: "Allow temporary solutions"
            default: true
      escalate:
        description: "Escalate emergency to higher level"
        inputs:
          escalation_level:
            type: integer
            constraints:
              - in_range: [1, 3]
            required: true
          escalation_reason:
            type: string
            required: true
          human_intervention_required:
            type: boolean
            default: false

  # Intent-Based Healing Interface
  rural_network.IntentBasedHealingInterface:
    derived_from: rural_network.AdvancedHealingInterface
    description: "Intent-based healing interface with natural language processing"
    operations:
      parse_intent:
        description: "Parse and understand healing intent"
        inputs:
          intent_text:
            type: string
            description: "Natural language healing intent"
            required: true
          context_awareness:
            type: boolean
            default: true
          semantic_analysis:
            type: boolean
            default: true
          ambiguity_resolution:
            type: string
            constraints:
              - valid_values: ["automatic", "interactive", "best_guess"]
            default: "automatic"
      translate_intent:
        description: "Translate intent to actionable healing steps"
        inputs:
          translation_model:
            type: string
            constraints:
              - valid_values: ["rule_based", "ml_based", "hybrid"]
            default: "hybrid"
          action_granularity:
            type: string
            constraints:
              - valid_values: ["high_level", "detailed", "executable"]
            default: "executable"
          safety_validation:
            type: boolean
            default: true
      execute_intent:
        description: "Execute intent-driven healing workflow"
        inputs:
          execution_strategy:
            type: string
            constraints:
              - valid_values: ["sequential", "parallel", "adaptive"]
            default: "adaptive"
          progress_monitoring:
            type: boolean
            default: true
          dynamic_adjustment:
            type: boolean
            description: "Allow dynamic adjustment during execution"
            default: true
      learn_from_intent:
        description: "Learn from intent execution outcomes"
        inputs:
          learning_scope:
            type: string
            constraints:
              - valid_values: ["local", "global", "domain_specific"]
            default: "domain_specific"
          knowledge_base_update:
            type: boolean
            default: true
          pattern_extraction:
            type: boolean
            default: true

  # Coordination Interface
  rural_network.CoordinationInterface:
    derived_from: tosca.interfaces.Root
    description: "Interface for coordinating multiple healing services"
    operations:
      coordinate_workflow:
        description: "Coordinate healing workflow execution"
        inputs:
          workflow_type:
            type: string
            required: true
          coordination_strategy:
            type: string
            constraints:
              - valid_values: ["centralized", "distributed", "hierarchical"]
            default: "hierarchical"
          parallel_execution:
            type: boolean
            default: true
          dependency_management:
            type: boolean
            default: true
      synchronize_operations:
        description: "Synchronize operations across multiple services"
        inputs:
          synchronization_points:
            type: list
            entry_schema:
              type: string
            required: true
          timeout_handling:
            type: string
            constraints:
              - valid_values: ["abort", "continue", "retry"]
            default: "retry"
          checkpoint_creation:
            type: boolean
            default: true
      manage_dependencies:
        description: "Manage dependencies between healing operations"
        inputs:
          dependency_graph:
            type: map
            entry_schema:
              type: list
            description: "Dependency graph representation"
            required: true
          circular_dependency_detection:
            type: boolean
            default: true
          dependency_resolution:
            type: string
            constraints:
              - valid_values: ["automatic", "manual", "hybrid"]
            default: "automatic"
      monitor_progress:
        description: "Monitor overall healing progress"
        inputs:
          monitoring_granularity:
            type: string
            constraints:
              - valid_values: ["coarse", "fine", "adaptive"]
            default: "adaptive"
          progress_reporting_interval:
            type: integer
            description: "Progress reporting interval in seconds"
            default: 10
          anomaly_detection:
            type: boolean
            default: true

  # Monitoring and Assessment Interface
  rural_network.MonitoringAssessmentInterface:
    derived_from: tosca.interfaces.Root
    description: "Interface for monitoring and assessment operations"
    operations:
      setup_monitoring:
        description: "Set up monitoring for healing operations"
        inputs:
          monitoring_scope:
            type: list
            entry_schema:
              type: string
            description: "Scope of monitoring"
            required: true
          metrics_collection:
            type: list
            entry_schema:
              type: string
            description: "Metrics to collect"
            required: true
          sampling_frequency:
            type: integer
            description: "Sampling frequency in seconds"
            default: 5
          alert_configuration:
            type: map
            entry_schema:
              type: float
            description: "Alert thresholds"
            required: false
      collect_metrics:
        description: "Collect performance and health metrics"
        inputs:
          metric_types:
            type: list
            entry_schema:
              type: string
            required: true
          collection_duration:
            type: integer
            description: "Collection duration in seconds"
            default: 60
          real_time_processing:
            type: boolean
            default: true
      assess_health:
        description: "Assess system health and performance"
        inputs:
          assessment_criteria:
            type: map
            entry_schema:
              type: float
            description: "Health assessment criteria"
            required: true
          baseline_comparison:
            type: boolean
            default: true
          trend_analysis:
            type: boolean
            default: true
          predictive_assessment:
            type: boolean
            default: false
      generate_alerts:
        description: "Generate alerts based on monitoring data"
        inputs:
          alert_severity_levels:
            type: map
            entry_schema:
              type: float
            required: true
          escalation_rules:
            type: map
            entry_schema:
              type: string
            required: false
          notification_channels:
            type: list
            entry_schema:
              type: string
            default: ["log", "email"]

  # Service Provider Integration Interface
  rural_network.ServiceProviderInterface:
    derived_from: tosca.interfaces.Root
    description: "Interface for service provider integration and reporting"
    operations:
      notify_incident:
        description: "Notify service provider of incidents"
        inputs:
          incident_details:
            type: map
            entry_schema:
              type: string
            required: true
          severity_level:
            type: string
            constraints:
              - valid_values: ["LOW", "MEDIUM", "HIGH", "CRITICAL"]
            required: true
          notification_urgency:
            type: string
            constraints:
              - valid_values: ["immediate", "scheduled", "batch"]
            default: "immediate"
          sla_impact_assessment:
            type: boolean
            default: true
      track_incident:
        description: "Track incident resolution progress"
        inputs:
          incident_id:
            type: string
            required: true
          tracking_interval:
            type: integer
            description: "Tracking interval in minutes"
            default: 15
          status_reporting:
            type: boolean
            default: true
      generate_report:
        description: "Generate comprehensive healing reports"
        inputs:
          report_type:
            type: string
            constraints:
              - valid_values: ["incident", "performance", "effectiveness", "comprehensive"]
            required: true
          report_format:
            type: string
            constraints:
              - valid_values: ["json", "xml", "pdf", "html"]
            default: "json"
          include_metrics:
            type: boolean
            default: true
          include_recommendations:
            type: boolean
            default: true
      update_sla_status:
        description: "Update SLA compliance status"
        inputs:
          sla_metrics:
            type: map
            entry_schema:
              type: float
            required: true
          compliance_threshold:
            type: float
            constraints:
              - in_range: [0.0, 1.0]
            default: 0.99
          breach_notification:
            type: boolean
            default: true

  # AI Model Management Interface
  rural_network.AIModelInterface:
    derived_from: tosca.interfaces.Root
    description: "Interface for AI model management in healing operations"
    operations:
      load_model:
        description: "Load AI model for healing operations"
        inputs:
          model_type:
            type: string
            constraints:
              - valid_values: ["lstm", "transformer", "cnn", "ensemble"]
            required: true
          model_version:
            type: string
            required: true
          gpu_acceleration:
            type: boolean
            default: false
          model_parameters:
            type: map
            entry_schema:
              type: string
            required: false
      train_model:
        description: "Train or retrain AI model"
        inputs:
          training_data:
            type: string
            description: "Path to training data"
            required: true
          training_parameters:
            type: map
            entry_schema:
              type: string
            required: true
          validation_split:
            type: float
            constraints:
              - in_range: [0.1, 0.5]
            default: 0.2
          early_stopping:
            type: boolean
            default: true
      predict:
        description: "Make predictions using AI model"
        inputs:
          input_data:
            type: map
            entry_schema:
              type: string
            required: true
          prediction_confidence:
            type: boolean
            description: "Include confidence scores"
            default: true
          ensemble_prediction:
            type: boolean
            default: false
      update_model:
        description: "Update model with new data"
        inputs:
          update_strategy:
            type: string
            constraints:
              - valid_values: ["incremental", "full_retrain", "transfer_learning"]
            default: "incremental"
          update_data:
            type: string
            required: true
          validation_required:
            type: boolean
            default: true

  # Configuration Management Interface
  rural_network.ConfigurationInterface:
    derived_from: tosca.interfaces.Root
    description: "Interface for healing configuration management"
    operations:
      backup_configuration:
        description: "Backup current configuration"
        inputs:
          backup_scope:
            type: string
            constraints:
              - valid_values: ["full", "incremental", "selective"]
            default: "full"
          backup_location:
            type: string
            required: true
          encryption_enabled:
            type: boolean
            default: true
          compression_enabled:
            type: boolean
            default: true
      restore_configuration:
        description: "Restore configuration from backup"
        inputs:
          backup_id:
            type: string
            required: true
          restoration_mode:
            type: string
            constraints:
              - valid_values: ["complete", "selective", "merge"]
            default: "complete"
          validation_before_restore:
            type: boolean
            default: true
          rollback_on_failure:
            type: boolean
            default: true
      validate_configuration:
        description: "Validate configuration integrity"
        inputs:
          validation_rules:
            type: list
            entry_schema:
              type: string
            required: true
          syntax_validation:
            type: boolean
            default: true
          semantic_validation:
            type: boolean
            default: true
          dependency_validation:
            type: boolean
            default: true
      apply_configuration:
        description: "Apply new configuration"
        inputs:
          configuration_data:
            type: map
            entry_schema:
              type: string
            required: true
          apply_strategy:
            type: string
            constraints:
              - valid_values: ["immediate", "staged", "scheduled"]
            default: "staged"
          testing_required:
            type: boolean
            default: true
          rollback_plan:
            type: boolean
            default: true

# Artifact Type Definitions for Healing
artifact_types:
  rural_network.HealingPlaybook:
    derived_from: tosca.artifacts.Root
    description: "Ansible playbook for healing operations"
    mime_type: "application/x-yaml"
    file_ext: ["yml", "yaml"]

  rural_network.HealingScript:
    derived_from: tosca.artifacts.Root
    description: "Script for healing operations"
    mime_type: "application/x-executable"
    file_ext: ["sh", "py", "ps1"]

  rural_network.AIModel:
    derived_from: tosca.artifacts.Root
    description: "AI model artifact for healing operations"
    mime_type: "application/octet-stream"
    file_ext: ["pkl", "h5", "pb", "onnx"]

  rural_network.ConfigurationTemplate:
    derived_from: tosca.artifacts.Root
    description: "Configuration template for healing"
    mime_type: "application/x-yaml"
    file_ext: ["yml", "yaml", "json"]

  rural_network.HealingReport:
    derived_from: tosca.artifacts.Root
    description: "Healing operation report"
    mime_type: "application/json"
    file_ext: ["json", "xml", "html"]